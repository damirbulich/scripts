import { IRepository } from 'src/common/interfaces/repository.interface';
import { PaginationParams } from 'src/common/pagination/pagination.params';

import { I<%pascal%>Record } from './<%kebab%>.interface';

export const <%pascal%>RepositoryToken = Symbol('<%pascal%>Repository');

export interface I<%pascal%>Repository extends IRepository<I<%pascal%>Record> {
  /**
   * Find <%normal%> by Id
   * @param id - unique id of the <%normal%>
   */
  findById(id: string): Promise<I<%pascal%>Record>;

  /**
   * Find many <%plural_normal%> and count all
   * @param params - pagination parameters skip and limit (take)
   */
  findManyAndCount(
    params: PaginationParams,
  ): Promise<[I<%pascal%>Record[], number]>;

  /**
   * Check wether the record exists in the database
   * @param id - unique id of <%plural_normal%>
   */
  existsById(id: string): Promise<boolean>;
}
